{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet AdminComponent = class AdminComponent {\n  constructor() {\n    this.id = \"admin\";\n    this.mdp = \"admin\";\n    //Liste de groupes\n    this.groupes = [];\n    //Recevoir en entrée le nombre d'utilisateurs\n    this.nbUsers = \"\";\n    this.nbGroupes = \"\";\n    //Choisir en entrée une configuration LASTMIN ou LASTMAX\n    this.config = \"\";\n  }\n  ngOnInit() {}\n  //Méthode pour vérifier si l'admin est connecté\n  //Si oui, on affiche la page admin\n  //Sinon, on affiche un message d'erreur\n  connecter() {\n    if (this.id == \"admin\" && this.mdp == \"admin\") {\n      console.log(\"Connecté\");\n    } else {\n      console.log(\"Erreur\");\n    }\n  }\n  //recuperer le nombre d'utilisateurs\n  getNbUsers() {\n    return this.nbUsers;\n  }\n  //modifier le nombre d'utilisateurs\n  setNbUsers(nbUsers) {\n    this.nbUsers = nbUsers;\n  }\n  //recuperer le nombre de groupes\n  getNbGroupes() {\n    return this.nbGroupes;\n  }\n  //modifier le nombre de groupes\n  setNbGroupes(nbGroupes) {\n    this.nbGroupes = nbGroupes;\n  }\n  //recuperer la configuration\n  getConfig() {\n    return this.config;\n  }\n  //modifier la configuration\n  setConfig(config) {\n    this.config = config;\n  }\n  //Affiche le nombre d'utilisateurs, de groupes et la configuration depuis le fichier admin.component.html\n  onSubmit() {\n    console.log(\"Nombre d'utilisateurs: \" + this.nbUsers);\n    console.log(\"Nombre de groupes: \" + this.nbGroupes);\n    console.log(\"Configuration: \" + this.config);\n  }\n  //\n  creerGroupe() {\n    return new Promise(resolve => {\n      //convertir le nombre de groupes en entier\n      let nbrG = parseInt(this.nbGroupes);\n      //convertir le nombre de user en entier\n      let nbrU = parseInt(this.nbUsers);\n      //initialiser l'interface Groupe\n      let groupe = {\n        id_groupe: 0,\n        nbr_user: 0,\n        liste_user: []\n      };\n      if (nbrU % nbrG == 0) {\n        //ceéer la liste de groupe selon le nombre de groupes\n        for (let i = 1; i <= nbrG; i++) {\n          groupe.id_groupe = i;\n          groupe.nbr_user = nbrU / nbrG;\n          this.groupes.push(groupe);\n          groupe = {\n            id_groupe: 0,\n            nbr_user: 0,\n            liste_user: []\n          };\n        }\n      } else {\n        // Si la configuration vaut LAST_MIN, le dernier groupe a moins d’utilisateurs que les autres (ex : 19 utilisateurs et 5 groupes => 4 groupes de 4 et 1 groupe de 3)\n        if (this.config === \"LAST_MIN\") {\n          let cptU = 0;\n          if (nbrU % nbrG == 1) {\n            for (let i = 1; i <= nbrG; i++) {\n              groupe.id_groupe = i;\n              groupe.nbr_user = Math.floor(nbrU / nbrG);\n              cptU += groupe.nbr_user;\n              this.groupes.push(groupe);\n              groupe = {\n                id_groupe: 0,\n                nbr_user: 0,\n                liste_user: []\n              };\n            }\n            this.groupes[nbrG - 1].nbr_user -= cptU - nbrU;\n          } else {\n            for (let i = 1; i <= nbrG; i++) {\n              groupe.id_groupe = i;\n              groupe.nbr_user = Math.floor(nbrU / nbrG) + 1;\n              cptU += groupe.nbr_user;\n              this.groupes.push(groupe);\n              groupe = {\n                id_groupe: 0,\n                nbr_user: 0,\n                liste_user: []\n              };\n            }\n            this.groupes[nbrG - 1].nbr_user -= cptU - nbrU;\n          }\n        } else if (this.config === \"LAST_MAX\") {\n          let cptU = 0;\n          for (let i = 1; i <= nbrG; i++) {\n            groupe.id_groupe = i;\n            groupe.nbr_user = Math.floor(nbrU / nbrG);\n            cptU += groupe.nbr_user;\n            this.groupes.push(groupe);\n            groupe = {\n              id_groupe: 0,\n              nbr_user: 0,\n              liste_user: []\n            };\n          }\n          this.groupes[nbrG - 1].nbr_user -= cptU - nbrU;\n        } else {\n          console.log(\"Erreur configuration\");\n        }\n      }\n      resolve(this.groupes);\n    });\n  }\n  //Afficher la liste des groupes\n  afficherGroupe() {\n    this.creerGroupe().then(groupes => {\n      console.log(groupes);\n    });\n  }\n  //afficher la configuration, le nombre d'utilisateurs et de groupes\n  afficherConfig() {\n    console.log(\"Nombre d'utilisateurs: \" + this.nbUsers);\n    console.log(\"Nombre de groupes: \" + this.nbGroupes);\n    console.log(\"Configuration: \" + this.config);\n  }\n  //recuperer la liste des groupes\n  getGroupes() {\n    return this.groupes;\n  }\n};\nAdminComponent = __decorate([Component({\n  selector: 'app-admin',\n  //rajoute dans le templateUrl le fichier adminConfig.html et le fichier admin.component.css\n  styleUrls: ['./admin.component.css']\n})], AdminComponent);\nexport { AdminComponent };","map":{"version":3,"names":["Component","AdminComponent","constructor","id","mdp","groupes","nbUsers","nbGroupes","config","ngOnInit","connecter","console","log","getNbUsers","setNbUsers","getNbGroupes","setNbGroupes","getConfig","setConfig","onSubmit","creerGroupe","Promise","resolve","nbrG","parseInt","nbrU","groupe","id_groupe","nbr_user","liste_user","i","push","cptU","Math","floor","afficherGroupe","then","afficherConfig","getGroupes","__decorate","selector","styleUrls"],"sources":["C:\\Users\\joelb\\Documents\\EISI\\Integration Continue\\Angular Groupes Dutilisateur\\Angular-project-groupes-users\\src\\admin\\admin.component.ts"],"sourcesContent":["\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { Groupe } from 'src/groupe';\r\n\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  //rajoute dans le templateUrl le fichier adminConfig.html et le fichier admin.component.css\r\n  styleUrls: ['./admin.component.css']\r\n})\r\n\r\nexport class AdminComponent implements OnInit {\r\n  id: string = \"admin\";\r\n  mdp: string = \"admin\";\r\n  //Liste de groupes\r\n  groupes: Groupe[] = [];\r\n\r\n  //Recevoir en entrée le nombre d'utilisateurs\r\n  nbUsers: string = \"\";\r\n  nbGroupes: string = \"\";\r\n\r\n  //Choisir en entrée une configuration LASTMIN ou LASTMAX\r\n  config: string =\"\";\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  //Méthode pour vérifier si l'admin est connecté\r\n  //Si oui, on affiche la page admin\r\n  //Sinon, on affiche un message d'erreur\r\n  connecter() {\r\n    if (this.id == \"admin\" && this.mdp == \"admin\") {\r\n      console.log(\"Connecté\");\r\n    }\r\n    else {\r\n      console.log(\"Erreur\");\r\n    }\r\n  }\r\n  //recuperer le nombre d'utilisateurs\r\n  getNbUsers() {\r\n    return this.nbUsers;\r\n  }\r\n  //modifier le nombre d'utilisateurs\r\n  setNbUsers(nbUsers: string) {\r\n    this.nbUsers = nbUsers;\r\n  }\r\n  //recuperer le nombre de groupes\r\n  getNbGroupes() {\r\n    return this.nbGroupes;\r\n  }\r\n  //modifier le nombre de groupes\r\n  setNbGroupes(nbGroupes: string) {\r\n    this.nbGroupes = nbGroupes;\r\n  }\r\n  //recuperer la configuration\r\n  getConfig() {\r\n    return this.config;\r\n  }\r\n  //modifier la configuration\r\n  setConfig(config: string) {\r\n    this.config = config;\r\n  }\r\n  //Affiche le nombre d'utilisateurs, de groupes et la configuration depuis le fichier admin.component.html\r\n  onSubmit() {\r\n    console.log(\"Nombre d'utilisateurs: \" + this.nbUsers);\r\n    console.log(\"Nombre de groupes: \" + this.nbGroupes);\r\n    console.log(\"Configuration: \" + this.config);\r\n  }\r\n\r\n\r\n  //\r\n  creerGroupe(): Promise<Groupe[]>{\r\n    return new Promise((resolve) => {\r\n      //convertir le nombre de groupes en entier\r\n      let nbrG = parseInt(this.nbGroupes);\r\n      //convertir le nombre de user en entier\r\n      let nbrU = parseInt(this.nbUsers);\r\n      //initialiser l'interface Groupe\r\n      let groupe: Groupe = {\r\n        id_groupe: 0,\r\n        nbr_user: 0,\r\n        liste_user: []\r\n      };\r\n\r\n      if(nbrU % nbrG == 0){\r\n        //ceéer la liste de groupe selon le nombre de groupes\r\n        for(let i = 1; i <= nbrG; i++){\r\n          groupe.id_groupe = i;\r\n          groupe.nbr_user = nbrU/nbrG;\r\n          this.groupes.push(groupe);\r\n          groupe = {\r\n            id_groupe: 0,\r\n            nbr_user: 0,\r\n            liste_user: []\r\n          };\r\n\r\n        }\r\n      }\r\n      else{\r\n        // Si la configuration vaut LAST_MIN, le dernier groupe a moins d’utilisateurs que les autres (ex : 19 utilisateurs et 5 groupes => 4 groupes de 4 et 1 groupe de 3)\r\n        if(this.config ===\"LAST_MIN\"){\r\n          let cptU = 0;\r\n          if(nbrU % nbrG == 1){\r\n            for(let i = 1; i <= nbrG; i++){\r\n              groupe.id_groupe = i;\r\n              groupe.nbr_user = Math.floor(nbrU/nbrG);\r\n              cptU += groupe.nbr_user;\r\n              this.groupes.push(groupe);\r\n              groupe = {\r\n                id_groupe: 0,\r\n                nbr_user: 0,\r\n                liste_user: []\r\n              };\r\n            }\r\n           this.groupes[nbrG-1].nbr_user -=cptU-nbrU;\r\n          }\r\n          else{\r\n            for(let i = 1; i <= nbrG; i++){\r\n              groupe.id_groupe = i;\r\n              groupe.nbr_user = Math.floor(nbrU/nbrG) + 1;\r\n              cptU += groupe.nbr_user;\r\n              this.groupes.push(groupe);\r\n              groupe = {\r\n                id_groupe: 0,\r\n                nbr_user: 0,\r\n                liste_user: []\r\n              };\r\n            }\r\n            this.groupes[nbrG-1].nbr_user -=cptU-nbrU;\r\n          }\r\n        }\r\n        else if(this.config === \"LAST_MAX\"){\r\n          let cptU = 0;\r\n          for(let i = 1; i <= nbrG; i++){\r\n            groupe.id_groupe = i;\r\n            groupe.nbr_user = Math.floor(nbrU/nbrG);\r\n            cptU += groupe.nbr_user;\r\n            this.groupes.push(groupe);\r\n            groupe = {\r\n              id_groupe: 0,\r\n              nbr_user: 0,\r\n              liste_user: []\r\n            };\r\n          }\r\n          this.groupes[nbrG-1].nbr_user -=cptU-nbrU;\r\n        }\r\n        else{\r\n          console.log(\"Erreur configuration\");\r\n        }\r\n      }\r\n      resolve(this.groupes);\r\n    });\r\n  }\r\n   //Afficher la liste des groupes\r\n   afficherGroupe(){\r\n    this.creerGroupe().then((groupes) => {\r\n      console.log(groupes);\r\n    });\r\n  }\r\n  //afficher la configuration, le nombre d'utilisateurs et de groupes\r\n  afficherConfig(){\r\n    console.log(\"Nombre d'utilisateurs: \" + this.nbUsers);\r\n    console.log(\"Nombre de groupes: \" + this.nbGroupes);\r\n    console.log(\"Configuration: \" + this.config);\r\n  }\r\n  //recuperer la liste des groupes\r\n  getGroupes(){\r\n    return this.groupes;\r\n  }\r\n}\r\n\r\n"],"mappings":";AACA,SAASA,SAAS,QAAuB,eAAe;AAUjD,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAazBC,YAAA;IAZA,KAAAC,EAAE,GAAW,OAAO;IACpB,KAAAC,GAAG,GAAW,OAAO;IACrB;IACA,KAAAC,OAAO,GAAa,EAAE;IAEtB;IACA,KAAAC,OAAO,GAAW,EAAE;IACpB,KAAAC,SAAS,GAAW,EAAE;IAEtB;IACA,KAAAC,MAAM,GAAU,EAAE;EAEF;EAEhBC,QAAQA,CAAA,GACR;EAEA;EACA;EACA;EACAC,SAASA,CAAA;IACP,IAAI,IAAI,CAACP,EAAE,IAAI,OAAO,IAAI,IAAI,CAACC,GAAG,IAAI,OAAO,EAAE;MAC7CO,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;KACxB,MACI;MACHD,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;;EAEzB;EACA;EACAC,UAAUA,CAAA;IACR,OAAO,IAAI,CAACP,OAAO;EACrB;EACA;EACAQ,UAAUA,CAACR,OAAe;IACxB,IAAI,CAACA,OAAO,GAAGA,OAAO;EACxB;EACA;EACAS,YAAYA,CAAA;IACV,OAAO,IAAI,CAACR,SAAS;EACvB;EACA;EACAS,YAAYA,CAACT,SAAiB;IAC5B,IAAI,CAACA,SAAS,GAAGA,SAAS;EAC5B;EACA;EACAU,SAASA,CAAA;IACP,OAAO,IAAI,CAACT,MAAM;EACpB;EACA;EACAU,SAASA,CAACV,MAAc;IACtB,IAAI,CAACA,MAAM,GAAGA,MAAM;EACtB;EACA;EACAW,QAAQA,CAAA;IACNR,OAAO,CAACC,GAAG,CAAC,yBAAyB,GAAG,IAAI,CAACN,OAAO,CAAC;IACrDK,OAAO,CAACC,GAAG,CAAC,qBAAqB,GAAG,IAAI,CAACL,SAAS,CAAC;IACnDI,OAAO,CAACC,GAAG,CAAC,iBAAiB,GAAG,IAAI,CAACJ,MAAM,CAAC;EAC9C;EAGA;EACAY,WAAWA,CAAA;IACT,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAI;MAC7B;MACA,IAAIC,IAAI,GAAGC,QAAQ,CAAC,IAAI,CAACjB,SAAS,CAAC;MACnC;MACA,IAAIkB,IAAI,GAAGD,QAAQ,CAAC,IAAI,CAAClB,OAAO,CAAC;MACjC;MACA,IAAIoB,MAAM,GAAW;QACnBC,SAAS,EAAE,CAAC;QACZC,QAAQ,EAAE,CAAC;QACXC,UAAU,EAAE;OACb;MAED,IAAGJ,IAAI,GAAGF,IAAI,IAAI,CAAC,EAAC;QAClB;QACA,KAAI,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIP,IAAI,EAAEO,CAAC,EAAE,EAAC;UAC5BJ,MAAM,CAACC,SAAS,GAAGG,CAAC;UACpBJ,MAAM,CAACE,QAAQ,GAAGH,IAAI,GAACF,IAAI;UAC3B,IAAI,CAAClB,OAAO,CAAC0B,IAAI,CAACL,MAAM,CAAC;UACzBA,MAAM,GAAG;YACPC,SAAS,EAAE,CAAC;YACZC,QAAQ,EAAE,CAAC;YACXC,UAAU,EAAE;WACb;;OAGJ,MACG;QACF;QACA,IAAG,IAAI,CAACrB,MAAM,KAAI,UAAU,EAAC;UAC3B,IAAIwB,IAAI,GAAG,CAAC;UACZ,IAAGP,IAAI,GAAGF,IAAI,IAAI,CAAC,EAAC;YAClB,KAAI,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIP,IAAI,EAAEO,CAAC,EAAE,EAAC;cAC5BJ,MAAM,CAACC,SAAS,GAAGG,CAAC;cACpBJ,MAAM,CAACE,QAAQ,GAAGK,IAAI,CAACC,KAAK,CAACT,IAAI,GAACF,IAAI,CAAC;cACvCS,IAAI,IAAIN,MAAM,CAACE,QAAQ;cACvB,IAAI,CAACvB,OAAO,CAAC0B,IAAI,CAACL,MAAM,CAAC;cACzBA,MAAM,GAAG;gBACPC,SAAS,EAAE,CAAC;gBACZC,QAAQ,EAAE,CAAC;gBACXC,UAAU,EAAE;eACb;;YAEJ,IAAI,CAACxB,OAAO,CAACkB,IAAI,GAAC,CAAC,CAAC,CAACK,QAAQ,IAAGI,IAAI,GAACP,IAAI;WACzC,MACG;YACF,KAAI,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIP,IAAI,EAAEO,CAAC,EAAE,EAAC;cAC5BJ,MAAM,CAACC,SAAS,GAAGG,CAAC;cACpBJ,MAAM,CAACE,QAAQ,GAAGK,IAAI,CAACC,KAAK,CAACT,IAAI,GAACF,IAAI,CAAC,GAAG,CAAC;cAC3CS,IAAI,IAAIN,MAAM,CAACE,QAAQ;cACvB,IAAI,CAACvB,OAAO,CAAC0B,IAAI,CAACL,MAAM,CAAC;cACzBA,MAAM,GAAG;gBACPC,SAAS,EAAE,CAAC;gBACZC,QAAQ,EAAE,CAAC;gBACXC,UAAU,EAAE;eACb;;YAEH,IAAI,CAACxB,OAAO,CAACkB,IAAI,GAAC,CAAC,CAAC,CAACK,QAAQ,IAAGI,IAAI,GAACP,IAAI;;SAE5C,MACI,IAAG,IAAI,CAACjB,MAAM,KAAK,UAAU,EAAC;UACjC,IAAIwB,IAAI,GAAG,CAAC;UACZ,KAAI,IAAIF,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIP,IAAI,EAAEO,CAAC,EAAE,EAAC;YAC5BJ,MAAM,CAACC,SAAS,GAAGG,CAAC;YACpBJ,MAAM,CAACE,QAAQ,GAAGK,IAAI,CAACC,KAAK,CAACT,IAAI,GAACF,IAAI,CAAC;YACvCS,IAAI,IAAIN,MAAM,CAACE,QAAQ;YACvB,IAAI,CAACvB,OAAO,CAAC0B,IAAI,CAACL,MAAM,CAAC;YACzBA,MAAM,GAAG;cACPC,SAAS,EAAE,CAAC;cACZC,QAAQ,EAAE,CAAC;cACXC,UAAU,EAAE;aACb;;UAEH,IAAI,CAACxB,OAAO,CAACkB,IAAI,GAAC,CAAC,CAAC,CAACK,QAAQ,IAAGI,IAAI,GAACP,IAAI;SAC1C,MACG;UACFd,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;;;MAGvCU,OAAO,CAAC,IAAI,CAACjB,OAAO,CAAC;IACvB,CAAC,CAAC;EACJ;EACC;EACA8B,cAAcA,CAAA;IACb,IAAI,CAACf,WAAW,EAAE,CAACgB,IAAI,CAAE/B,OAAO,IAAI;MAClCM,OAAO,CAACC,GAAG,CAACP,OAAO,CAAC;IACtB,CAAC,CAAC;EACJ;EACA;EACAgC,cAAcA,CAAA;IACZ1B,OAAO,CAACC,GAAG,CAAC,yBAAyB,GAAG,IAAI,CAACN,OAAO,CAAC;IACrDK,OAAO,CAACC,GAAG,CAAC,qBAAqB,GAAG,IAAI,CAACL,SAAS,CAAC;IACnDI,OAAO,CAACC,GAAG,CAAC,iBAAiB,GAAG,IAAI,CAACJ,MAAM,CAAC;EAC9C;EACA;EACA8B,UAAUA,CAAA;IACR,OAAO,IAAI,CAACjC,OAAO;EACrB;CACD;AAhKYJ,cAAc,GAAAsC,UAAA,EAN1BvC,SAAS,CAAC;EACTwC,QAAQ,EAAE,WAAW;EACrB;EACAC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EAEWxC,cAAc,CAgK1B;SAhKYA,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}